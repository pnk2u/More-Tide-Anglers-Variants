plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

version = "${mod_version}+${minecraft_version}-Fabric"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}
	maven {
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

loom {
	//splitEnvironmentSourceSets()

	//mods {
	//	"mtideanglersv" {
	//		sourceSet sourceSets.main
	//		sourceSet sourceSets.client
	//	}
	//}
	// accessWidenerPath = file("src/main/resources/mtideanglersv.accesswidener")
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	implementation 'org.apache.commons:commons-text:1.12.0'
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_date}@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fapi_version}"

	// Tide
	modCompileOnly "curse.maven:tide-884685:${project.tide_version_id}"

	// More Weapon Variants + MStV
	modCompileOnly "curse.maven:more-stick-variants-1096913:${project.mstv_version_id}"
	modCompileOnly "curse.maven:more-weapon-variants-1133775:${project.mweaponv_version_id}"

	// Cloth-Config
	modRuntimeOnly "curse.maven:cloth-config-348521:${project.clothconfig_version_id}"
}

processResources {
	var replaceProperties = [
			loader_version: loader_version, mod_id: mod_id, mod_name: mod_name,
			mod_license: mod_license, mod_version: mod_version,
			mod_description: mod_description, minecraft_version: minecraft_version
	]
	inputs.properties replaceProperties

	filesMatching("fabric.mod.json") {
		expand replaceProperties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}